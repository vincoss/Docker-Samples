
#+  configure admin center
#+	.net 4.7 sdk
#+	.net 4.8 sdk
#+	7 zip
#+  NuGet
#	.asp.net mvc 5 skd
#.sql cmd tools
#	.net core sdk
#	.VS build tools 2019
# SSRS tools
# python
#add bin file environment paths
#limit teamcity memory and cpu
#limit agent memory and cpu
#sql 
#powershell

## paths C:\Program Files\7-Zip

# escape=`
#FROM microsoft/dotnet-framework-build:4.7.1-windowsservercore-ltsc2016  
#SHELL ["powershell", "-Command", "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"]


FROM mcr.microsoft.com/dotnet/framework/sdk

# Install 7z
RUN [Net.ServicePointManager]::SecurityProtocol = 'tls12, tls11, tls' ; \
    Invoke-WebRequest https://www.7-zip.org/a/7z1900-x64.msi -OutFile 7z.msi; \
    Start-Process msiexec -Wait -ArgumentList /q, /i, 7z.msi ; \
    Remove-Item -Force 7z.msi

# Install Chocolatey
RUN powershell Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))

# Install NuGet CLI
RUN powershell choco install nuget.commandline

FROM mcr.microsoft.com/dotnet/framework/sdk:4.8
FROM mcr.microsoft.com/dotnet/core/sdk:2.1
FROM mcr.microsoft.com/dotnet/core/sdk:3.0

##
SHELL ["powershell", "-Command", "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"]

#

#
#
#SHELL ["powershell", "-Command", "$ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue';"]
#
#
#FROM mcr.microsoft.com/dotnet/framework/sdk:4.7.2

# Install Chocolatey
#RUN @powershell -NoProfile -ExecutionPolicy Bypass -Command "$env:ChocolateyUseWindowsCompression='false'; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))" && SET "PATH=%PATH%;%ALLUSERSPROFILE%\chocolatey\bin"
#RUN powershell add-windowsfeature web-asp-net45 \
#&& choco install dotnet4.7 --allow-empty-checksums -y \



# Tools
#FROM mcr.microsoft.com/powershell:latest

# SKDs
#FROM mcr.microsoft.com/dotnet/framework/sdk:4.8
#FROM mcr.microsoft.com/dotnet/core/sdk:2.1
#FROM mcr.microsoft.com/dotnet/core/sdk:3.0
##FROM mcr.microsoft.com/mssql-tools	thats linux
##FROM python

# Install 7z
#RUN [Net.ServicePointManager]::SecurityProtocol = 'tls12, tls11, tls' ; \
    #Invoke-WebRequest https://www.7-zip.org/a/7z1900-x64.msi -OutFile 7z.msi; \
    #Start-Process msiexec -Wait -ArgumentList /q, /i, 7z.msi ; \
    #Remove-Item -Force 7z.msi

# Install 7z
#RUN [Net.ServicePointManager]::SecurityProtocol = 'tls12, tls11, tls' ; \
    #Invoke-WebRequest https://www.7-zip.org/a/7z1900-extra.7z -OutFile 7z.zip; \
    #Expand-Archive 7z.zip -DestinationPath $Env:ProgramFiles\7-Zip ; \
    #Remove-Item -Force 7z.zip


# Path
#RUN setx /M Path "C:\Program Files\7-Zip"


# Install NuGet CLI
#ENV NUGET_VERSION 5.8.0
#RUN mkdir "%ProgramFiles%\NuGet"
#RUN curl -O "%ProgramFiles%\NuGet\nuget.exe" https://dist.nuget.org/win-x86-commandline/v5.8.0/nuget.exe


docker run -it --name <your-new-tcAgent-CONTAINER-name>
-e SERVER_URL="<your-local-tcServer-CONTAINER-name>:8111" 
-e AGENT_NAME="<your-new-tcAgent-name-to-appear-in-tcserver>" 
-v /var/run/docker.sock:/var/run/docker.sock 
-v /opt/buildagent/work:/opt/buildagent/work 
-v /opt/buildagent/temp:/opt/buildagent/temp 
-v </where/you/wanna/store/local/configs>:/data/teamcity_agent/conf 
--link <your-local-tcServer-container-name>
<name-of-tcAgent-IMAGE-you-are-using> 

## Disable and Remove Windows Defender Antimalware
Set-MpPreference -DisableRealtimeMonitoring $true
Get-WindowsFeature *defender* | Remove-WindowsFeature

## Create local user
FROM microsoft/windowsservercore
RUN net user /add custom-admin
RUN net localgroup Administrators custom-admin /add
USER custom-admin
RUN SilentInstall_Server.bat

## User as
# In order to set system PATH, ContainerAdministrator must be used
USER ContainerAdministrator
# return to low privilege user
USER ContainerUser

## Add domain user
$de = [ADSI]"WinNT://$computer/$Group,group" 
$de.psbase.Invoke("Add",([ADSI]"WinNT://$domain/$user").path)

version: '3.8'
services:

  teamcityagent0001:
    image: jetbrains/teamcity-agent
    container_name: teamcityagent0001
    hostname: teamcityagent0001
    volumes:
      - teamcityagent0001_data:c:/var/teamcity/teamcityagent0001/conf
      - teamcityagent0001_logs:c:/var/teamcity/teamcityagent0001/
    environment:
      - AGENT_NAME=teamcityagent0001
      - SERVER_URL=http://teamcity:8111/
      - TEAMCITY_SERVER_MEM_OPTS=-Xmx2g -XX:ReservedCodeCacheSize=350m
    expose:
      - 8111
    ports:
      - '9090:9090'   #client:server
    restart: always
    networks:
      - isolated_nw
    build:
      context: .
      dockerfile: Dockerfile

volumes:
  teamcityagent0001_data:
    external: true
  teamcityagent0001_logs:
    external: true

networks:
  isolated_nw:
    external: true
#ARG DOTNET_SDK_VERSION31_TAG=3.1
#ARG DOTNET_SDK_VERSION5_TAG=5.0
ARG DOTNET_SDK_VERSION6_TAG=6.0
ARG DOTNET_SDK_VERSION7_TAG=7.0
ARG DOTNET_SDK_VERSION8_TAG=8.0
ARG DOTNET_SDK_VERSION9_TAG=9.0-preview

ARG DOCKER_CLI_IMAGE=docker:cli
ARG TEAMCITYAGENT_IMAGE_REPOS=jetbrains/teamcity-agent
ARG TEAMCITYAGENT_IMAGE_TAG=latest

FROM mcr.microsoft.com/dotnet/sdk:${DOTNET_SDK_VERSION9_TAG} AS dotnetsdk9
FROM mcr.microsoft.com/dotnet/sdk:${DOTNET_SDK_VERSION8_TAG} AS dotnetsdk8
FROM mcr.microsoft.com/dotnet/sdk:${DOTNET_SDK_VERSION7_TAG} AS dotnetsdk7
FROM mcr.microsoft.com/dotnet/sdk:${DOTNET_SDK_VERSION6_TAG} AS dotnetsdk6
#FROM mcr.microsoft.com/dotnet/sdk:${DOTNET_SDK_VERSION5_TAG} AS dotnetsdk5
#FROM mcr.microsoft.com/dotnet/sdk:${DOTNET_SDK_VERSION31_TAG} AS dotnetsdk3
#FROM node:22-alpine3.19 AS nodelatest
FROM $DOCKER_CLI_IMAGE AS dockercli

FROM scratch AS build
# make sure folder exist
WORKDIR /usr/local/bin
WORKDIR /usr/share
#COPY --from=dotnetsdk3 /usr/share/dotnet /usr/share/dotnet
#COPY --from=dotnetsdk5 /usr/share/dotnet /usr/share/dotnet
COPY --from=dotnetsdk6 /usr/share/dotnet /usr/share/dotnet
COPY --from=dotnetsdk7 /usr/share/dotnet /usr/share/dotnet
COPY --from=dotnetsdk8 /usr/share/dotnet /usr/share/dotnet
COPY --from=dotnetsdk9 /usr/share/dotnet /usr/share/dotnet
COPY --from=dotnetsdk9 /usr/share/powershell /usr/share/powershell
COPY --from=dockercli /usr/local/libexec/docker/cli-plugins /usr/local/libexec/docker/cli-plugins
#COPY --from=nodelatest /usr/local/bin /usr/local/node/bin

FROM ${TEAMCITYAGENT_IMAGE_REPOS}:${TEAMCITYAGENT_IMAGE_TAG} AS final

USER root

#ARG DOTNET_SDK_VERSION31=3.1.0
#ARG ASPNET_VERSION31=3.1.0
#ARG DOTNET_VERSION31=3.1.0
#
#ARG DOTNET_SDK_VERSION5=5.0.0
#ARG ASPNET_VERSION5=5.0.0
#ARG DOTNET_VERSION5=5.0.0

ARG DOTNET_SDK_VERSION6=6.0.0
ARG ASPNET_VERSION6=6.0.0
ARG DOTNET_VERSION6=6.0.0

ARG DOTNET_SDK_VERSION7=7.0.0
ARG ASPNET_VERSION7=7.0.0
ARG DOTNET_VERSION7=7.0.0

ARG DOTNET_SDK_VERSION8=8.0.0
ARG ASPNET_VERSION8=8.0.0
ARG DOTNET_VERSION8=8.0.0

ARG DOTNET_SDK_VERSION9=9.0.0
ARG ASPNET_VERSION9=9.0.0
ARG DOTNET_VERSION9=9.0.0

ARG POWERSHELL_VERSION=7.4.1
ARG DOCKER_COMPOSE_VERSION=2.24.6
# Install PowerShell global tool
ENV DOTNET_SDK_VERSION31=${DOTNET_SDK_VERSION31} \
  ASPNET_VERSION31=${ASPNET_VERSION31} \
  DOTNET_VERSION31=${DOTNET_VERSION31} \
  \
  DOTNET_SDK_VERSION5=${DOTNET_SDK_VERSION5} \
  ASPNET_VERSION5=${ASPNET_VERSION5} \
  DOTNET_VERSION5=${DOTNET_VERSION5} \
  \
  DOTNET_SDK_VERSION6=${DOTNET_SDK_VERSION6} \
  ASPNET_VERSION6=${ASPNET_VERSION6} \
  DOTNET_VERSION6=${DOTNET_VERSION6} \
  \
  DOTNET_SDK_VERSION7=${DOTNET_SDK_VERSION7} \
  ASPNET_VERSION7=${ASPNET_VERSION7} \
  DOTNET_VERSION7=${DOTNET_VERSION7} \
  \
  DOTNET_SDK_VERSION8=${DOTNET_SDK_VERSION8} \
  ASPNET_VERSION8=${ASPNET_VERSION8} \
  DOTNET_VERSION8=${DOTNET_VERSION8} \
  \
  DOTNET_SDK_VERSION9=${DOTNET_SDK_VERSION9} \
  ASPNET_VERSION9=${ASPNET_VERSION9} \
  DOTNET_VERSION9=${DOTNET_VERSION9} \
  \
  POWERSHELL_VERSION=${POWERSHELL_VERSION} \
  POWERSHELL_DISTRIBUTION_CHANNEL=PSDocker-DotnetSDK-Ubuntu-20.04 \
  DOCKER_COMPOSE_VERSION=${DOCKER_COMPOSE_VERSION}

# Install Node
RUN apt-get update && apt-get install -y git sudo
RUN curl -sL https://deb.nodesource.com/setup_22.x | sudo -E bash -
RUN apt-get install -y nodejs



COPY --from=build /usr /usr

RUN  ln -s /usr/share/powershell/pwsh /usr/bin/pwsh \
  && chmod 755 /usr/share/powershell/pwsh \
  #&& ln -s /usr/share/minver-cli/minver /usr/bin/minver \
  #&& chmod +x /usr/share/minver-cli/minver \
  #&& rm /usr/local/bin/docker-compose \
  && ln -s /usr/local/libexec/docker/cli-plugins/docker-compose /usr/local/bin/docker-compose \
  && chmod +x /usr/libexec/docker/cli-plugins/docker-* \
  # Install module Pester - for root user
  && pwsh -Command "Install-Module -Name Pester -Scope AllUsers -Force" \
  && dotnet --help \
  && dotnet --info \
  && dotnet nuget locals all --clear

USER buildagent

# ENV  PATH="$PATH:/home/buildagent/.dotnet/tools"
# RUN dotnet tool install --global minver-cli --version $DOTNET_MINVER_VERSION